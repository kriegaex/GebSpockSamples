name: Java CI

on:
  workflow_dispatch: {}
  push:
    branches:
      - '*'
      - '!gh-pages'
  pull_request:
    branches:
      - '*'
      - '!gh-pages'

jobs:
  build:

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        javaVersion: [ 8, 11, 17 ]
        gebEnv: [ chrome_headless, html_unit ]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:

      - name: Set Git options
        # Check out as-is, commit Unix-style line endings
        run: git config --global core.autocrlf input

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/de/scrum-master/geb-spock-*
            ~/.cache/selenium
          key: maven-${{ matrix.os }}-java${{ matrix.javaVersion }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.javaVersion }}-
            maven-${{ matrix.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v2.5.0
        with:
          java-version: ${{ matrix.javaVersion }}
          distribution: adopt-hotspot

      - name: Set up Chrome browser
        if: ${{ matrix.gebEnv  == 'chrome_headless' }}
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Print tool versions
        # TODO: 'chrome --version' must be 'chromium --version' on MacOS
        run: |
          java -version
          mvn --batch-mode --version

      - name: Build with Maven
        # Chrome Headless does not need Xvfb
        # TODO: When also using other browsers, we need Xvfb on Linux
        run: mvn -U --batch-mode -P github "-Dgeb.env=${{ matrix.gebEnv }}" -fae clean verify

      # No matter if a preceding test run failed or not, try to generate and upload a test report
      # TODO: these steps should only happen if at least the build without tests passed, not always

      - name: Generate aggregate test report
        if: always()
        run: mvn --batch-mode -P github -Daggregate=true surefire-report:report-only

      - name: Attach aggregate test report to build
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: surefire-report-${{ matrix.os }}-java${{ matrix.javaVersion }}-${{ matrix.gebEnv }}
          path: target/site/surefire-report.html
